////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : FullAdder_NAND.vf
// /___/   /\     Timestamp : 09/27/2018 10:17:30
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog C:/Users/John/Documents/PHYS301_Xilinx/Lab5_Ex2/FullAdder_NAND.vf -w C:/Users/John/Documents/PHYS301_Xilinx/FullAdder_NAND.sch
//Design Name: FullAdder_NAND
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FullAdder_NAND(A, 
                      B, 
                      C, 
                      Cout, 
                      Sout);

    input A;
    input B;
    input C;
   output Cout;
   output Sout;
   
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_34;
   
   NAND2  XLXI_1 (.I0(XLXN_34), 
                 .I1(A), 
                 .O(XLXN_16));
   NAND2  XLXI_2 (.I0(B), 
                 .I1(XLXN_34), 
                 .O(XLXN_18));
   NAND2  XLXI_3 (.I0(XLXN_18), 
                 .I1(XLXN_16), 
                 .O(XLXN_31));
   NAND2  XLXI_4 (.I0(B), 
                 .I1(A), 
                 .O(XLXN_34));
   NAND2  XLXI_9 (.I0(XLXN_30), 
                 .I1(XLXN_31), 
                 .O(XLXN_26));
   NAND2  XLXI_10 (.I0(C), 
                  .I1(XLXN_30), 
                  .O(XLXN_27));
   NAND2  XLXI_11 (.I0(C), 
                  .I1(XLXN_31), 
                  .O(XLXN_30));
   NAND2  XLXI_12 (.I0(XLXN_27), 
                  .I1(XLXN_26), 
                  .O(Sout));
   NAND2  XLXI_13 (.I0(XLXN_34), 
                  .I1(XLXN_30), 
                  .O(Cout));
endmodule
